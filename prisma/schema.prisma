// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  password      String?
  role          String    @default("user")
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  preferences   Json?
  alerts        Alert[]
  cameras       Camera[]
  notificationContacts NotificationContact[]
}

model Camera {
  id          String   @id @default(cuid())
  name        String
  location    String?
  type        String
  url         String
  status      String   @default("offline")
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  alerts      Alert[]
}

model Alert {
  id          String    @id @default(cuid())
  type        String
  severity    String
  message     String
  status      String    @default("open")
  cameraId    String?
  camera      Camera?   @relation(fields: [cameraId], references: [id])
  userId      String
  user        User      @relation(fields: [userId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  resolvedAt  DateTime?
  resolvedBy  String?
}

model ZonePermission {
  id          String   @id @default(uuid())
  userId      String
  zoneId      String
  accessLevel String
  expiresAt   DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
  zone Zone @relation(fields: [zoneId], references: [id])
}

model Zone {
  id          String           @id @default(uuid())
  name        String
  description String?
  permissions ZonePermission[]
}

model NotificationContact {
  id        String   @id @default(uuid())
  userId    String
  type      String   // 'email' or 'phone'
  value     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
}
