name: Environment Variable Validation

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  validate-env:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install python-dotenv cryptography hvac
      
      - name: Create environment files
        run: |
          cp .env.example .env
          cp frontend/.env.example frontend/.env
          cp backend/.env.example backend/.env
      
      - name: Validate environment variables
        run: python scripts/validate_env.py
      
      - name: Check for sensitive data
        run: |
          # Check for hardcoded secrets
          if grep -r "password\|secret\|key\|token" . --exclude-dir={.git,node_modules,__pycache__} --exclude={.env,.env.*}; then
            echo "Warning: Potential sensitive data found in code"
          fi
          
          # Check for .env files in git
          if git ls-files | grep -q "\.env$"; then
            echo "Error: .env files found in git"
            exit 1
          fi
      
      - name: Validate Vault configuration
        if: github.ref == 'refs/heads/main'
        env:
          VAULT_ADDR: ${{ secrets.VAULT_ADDR }}
          VAULT_TOKEN: ${{ secrets.VAULT_TOKEN }}
        run: |
          if ! python scripts/manage_env.py sync-vault; then
            echo "Error: Failed to validate Vault configuration"
            exit 1
          fi
      
      - name: Export environment variables
        if: github.ref == 'refs/heads/main'
        run: |
          python scripts/manage_env.py export --env production
          python scripts/manage_env.py export --env staging
      
      - name: Upload environment files
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v3
        with:
          name: environment-files
          path: |
            config/env/production_env.json
            config/env/staging_env.json
          retention-days: 7 