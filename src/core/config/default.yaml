# CernoID System Configuration
version: 1.0

# System Settings
system:
  name: "CernoID"
  environment: "development"
  debug: true
  temp_dir: "data/temp"
  models_dir: "data/models"

# Database Configuration
database:
  type: postgresql
  host: localhost
  port: 5432
  name: cernoid_db
  user: "${CERNOID_DB_USER}"
  password: "${CERNOID_DB_PASSWORD}"
  pool_size: 20
  ssl_mode: prefer
  timeout: 30

# Face Recognition Settings
recognition:
  model:
    path: models/face_recognition
    confidence_threshold: 0.85
    batch_size: 32
    gpu_enabled: true
  cache:
    enabled: true
    max_size: 1000
    ttl: 3600

# Camera Configuration
camera:
  streams:
    - name: main_entrance
      url: rtsp://camera1.local/stream
      enabled: true
      resolution: [1920, 1080]
      fps: 30
    - name: side_entrance
      url: rtsp://camera2.local/stream
      enabled: true
      resolution: [1280, 720]
      fps: 25
  processing:
    max_workers: 4
    frame_skip: 2
    detection_interval: 0.5

# Logging Configuration
logging:
  path: logs
  level: INFO
  max_size: 10485760  # 10MB
  backup_count: 5
  sentry:
    enabled: false
    dsn: "${CERNOID_SENTRY_DSN}"

# Security Settings
security:
  jwt:
    secret: "${CERNOID_JWT_SECRET}"
    algorithm: HS256
    access_token_expire: 30  # minutes
    refresh_token_expire: 7  # days
  cors:
    allowed_origins:
      - "http://localhost:3000"
    allowed_methods:
      - "GET"
      - "POST"
      - "PUT"
      - "DELETE"
  rate_limiting:
    enabled: true
    rate: 100
    period: 60

# API Configuration
api:
  host: 0.0.0.0
  port: 8000
  debug: false
  prefix: /api/v1
  docs_url: /docs
  timeout: 60

# Event System
events:
  queue_size: 1000
  workers: 4
  retry:
    enabled: true
    max_attempts: 3
    delay: 5

# Storage Configuration
storage:
  type: local  # or s3, azure
  local:
    base_path: data/
    max_size: 10GB
  cloud:
    bucket: cernoid-storage
    region: us-east-1
    access_key: ${CLOUD_ACCESS_KEY}
    secret_key: ${CLOUD_SECRET_KEY}

# Monitoring
monitoring:
  enabled: true
  metrics:
    collection_interval: 60  # seconds
    retention_days: 30
  health_check:
    enabled: true
    interval: 30  # seconds
    timeout: 5  # seconds

# Cache Settings
cache:
  type: redis
  host: localhost
  port: 6379
  db: 0
  password: "${CERNOID_REDIS_PASSWORD}"
  ttl: 3600 